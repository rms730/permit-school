#!/bin/bash
set -euo pipefail

echo "== Offline Review Kit: Starting Local Development Environment =="
echo ""

# Check prerequisites
echo "Checking prerequisites..."
if ! command -v docker &> /dev/null; then
    echo "❌ Docker is required but not installed"
    exit 1
fi

if ! command -v supabase &> /dev/null; then
    echo "❌ Supabase CLI is required but not installed"
    echo "Install with: npm install -g supabase"
    exit 1
fi

if ! command -v node &> /dev/null; then
    echo "❌ Node.js is required but not installed"
    exit 1
fi

echo "✅ Prerequisites check passed"
echo ""

# Start Supabase
echo "== Starting local Supabase =="
supabase start
echo ""

# Get Supabase status for environment variables
echo "== Getting Supabase status =="
SUPABASE_STATUS=$(supabase status --output json)
SUPABASE_URL=$(echo "$SUPABASE_STATUS" | jq -r '.api.url')
SUPABASE_ANON_KEY=$(echo "$SUPABASE_STATUS" | jq -r '.api.anon_key')
SUPABASE_SERVICE_ROLE_KEY=$(echo "$SUPABASE_STATUS" | jq -r '.api.service_role_key')

echo "Supabase URL: $SUPABASE_URL"
echo ""

# Reset database with all migrations
echo "== Resetting local DB with project migrations =="
supabase db reset
echo ""

# Write .env.local if missing
echo "== Writing web/.env.local (if missing) =="
ENV_FILE="web/.env.local"
if [ ! -f "$ENV_FILE" ]; then
    cat > "$ENV_FILE" << EOF
# Offline Development Environment
# Generated by ops/offline/offline.sh

# Supabase Configuration
NEXT_PUBLIC_SUPABASE_URL=$SUPABASE_URL
NEXT_PUBLIC_SUPABASE_ANON_KEY=$SUPABASE_ANON_KEY
SUPABASE_SERVICE_ROLE_KEY=$SUPABASE_SERVICE_ROLE_KEY

# Offline Mode
OFFLINE_DEV=1

# Disable external services in offline mode
NEXT_PUBLIC_SENTRY_DSN=
NEXT_PUBLIC_GOOGLE_ONE_TAP=
RESEND_API_KEY=
STRIPE_SECRET_KEY=
STRIPE_PUBLISHABLE_KEY=

# Local development overrides
NEXT_PUBLIC_APP_BASE_URL=http://localhost:3000
EOF
    echo "✅ Created $ENV_FILE"
else
    echo "ℹ️  $ENV_FILE already exists, skipping creation"
fi
echo ""

# Wait for Supabase to be ready
echo "== Waiting for Supabase to be ready =="
sleep 5

# Seed demo data via testkit
echo "== Seeding demo data via testkit =="
echo "Creating test users and data..."

# Create admin user and get token
ADMIN_RESPONSE=$(curl -s -X POST http://localhost:54321/functions/v1/testkit/reset \
  -H "Content-Type: application/json" \
  -d '{"action": "create_admin", "email": "admin@offline.local", "password": "admin123"}')

if [ $? -eq 0 ]; then
    echo "✅ Created admin user"
else
    echo "⚠️  Failed to create admin user via testkit, continuing..."
fi

# Create student user
STUDENT_RESPONSE=$(curl -s -X POST http://localhost:54321/functions/v1/testkit/reset \
  -H "Content-Type: application/json" \
  -d '{"action": "create_student", "email": "student@offline.local", "password": "student123", "age": 18}')

if [ $? -eq 0 ]; then
    echo "✅ Created student user"
else
    echo "⚠️  Failed to create student user via testkit, continuing..."
fi

# Create minor student with guardian
MINOR_RESPONSE=$(curl -s -X POST http://localhost:54321/functions/v1/testkit/reset \
  -H "Content-Type: application/json" \
  -d '{"action": "create_minor_with_guardian", "student_email": "minor@offline.local", "guardian_email": "guardian@offline.local", "student_password": "minor123", "guardian_password": "guardian123", "age": 16}')

if [ $? -eq 0 ]; then
    echo "✅ Created minor student with guardian"
else
    echo "⚠️  Failed to create minor student via testkit, continuing..."
fi

echo ""

# Install web dependencies if needed
echo "== Checking web dependencies =="
if [ ! -d "web/node_modules" ]; then
    echo "Installing web dependencies..."
    (cd web && npm install)
else
    echo "✅ Web dependencies already installed"
fi
echo ""

# Start Next.js in offline mode
echo "== Starting Next.js in offline mode =="
echo "🚀 Starting development server..."
echo "📱 App will be available at: http://localhost:3000"
echo ""
echo "=== OFFLINE REVIEW KIT READY ==="
echo ""
echo "🔗 URLs:"
echo "  • App: http://localhost:3000"
echo "  • Supabase Studio: http://localhost:54323"
echo "  • API: http://localhost:54321"
echo ""
echo "👤 Test Users:"
echo "  • Admin: admin@offline.local / admin123"
echo "  • Student: student@offline.local / student123"
echo "  • Minor: minor@offline.local / minor123"
echo "  • Guardian: guardian@offline.local / guardian123"
echo ""
echo "💡 Tips:"
echo "  • Turn off WiFi to test true offline mode"
echo "  • Use browser dev tools to verify no external requests"
echo "  • Check console for offline mode indicators"
echo ""
echo "Press Ctrl+C to stop the server"
echo ""

# Start the development server
(cd web && npm run dev:offline)
