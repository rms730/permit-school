name: release

on:
  push:
    branches:
      - release/**
  workflow_dispatch:

jobs:
  stage_migrate_test:
    name: Stage • migrate + audit + e2e
    runs-on: ubuntu-latest
    env:
      NEXT_PUBLIC_ENV: staging
      NEXT_PUBLIC_COMMIT_SHA: ${{ github.sha }}
      NEXT_PUBLIC_BUILD_AT: ${{ github.run_started_at }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install web deps
        working-directory: web
        run: npm ci --no-audit --no-fund

      - name: Lint & build web
        working-directory: web
        run: |
          npm run lint --if-present
          npm run typecheck --if-present
          npm run build

      - name: Install Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Migrate STAGING (supabase db push)
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.STAGING_SUPABASE_ACCESS_TOKEN }}
        run: |
          supabase link --project-ref ${{ secrets.STAGING_SUPABASE_PROJECT_REF }}
          supabase db push

      - name: RLS audit (STAGING)
        env:
          DATABASE_URL: ${{ secrets.STAGING_DATABASE_URL }}
        run: bash ops/checks/rls_audit.sh

      - name: Backup STAGING (artifact)
        env:
          DATABASE_URL: ${{ secrets.STAGING_DATABASE_URL }}
        run: |
          chmod +x ops/db/backup.sh
          FILE=$(bash ops/db/backup.sh)
          echo "BK=$FILE" >> $GITHUB_ENV
        shell: bash

      - name: Upload backup artifact
        uses: actions/upload-artifact@v4
        with:
          name: staging-db-backup
          path: ${{ env.BK }}

      - name: Install Playwright
        working-directory: web
        run: npx playwright install --with-deps

      - name: E2E on STAGING
        working-directory: web
        env:
          BASE_URL: ${{ secrets.STAGING_BASE_URL }}
          TESTKIT_ON: "true"
          TESTKIT_TOKEN: ${{ secrets.TESTKIT_TOKEN }}
        run: npm run test:e2e

      - name: Seed handbooks (STAGING)
        working-directory: web
        env:
          SUPABASE_URL: ${{ secrets.STAGING_SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.STAGING_SUPABASE_SERVICE_ROLE_KEY }}
        run: npm run seed:handbooks

  prod_promote:
    name: Prod • manual approve → migrate + smoke
    needs: [stage_migrate_test]
    runs-on: ubuntu-latest
    environment:
      name: production
      # Require manual approval via GitHub Environments protection
    env:
      NEXT_PUBLIC_ENV: production
      NEXT_PUBLIC_COMMIT_SHA: ${{ github.sha }}
      NEXT_PUBLIC_BUILD_AT: ${{ github.run_started_at }}
    steps:
      - uses: actions/checkout@v4

      - name: Install Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Migrate PROD (supabase db push)
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.PROD_SUPABASE_ACCESS_TOKEN }}
        run: |
          supabase link --project-ref ${{ secrets.PROD_SUPABASE_PROJECT_REF }}
          supabase db push

      - name: RLS audit (PROD)
        env:
          DATABASE_URL: ${{ secrets.PROD_DATABASE_URL }}
        run: bash ops/checks/rls_audit.sh

      - name: Smoke tests (PROD)
        env:
          BASE_URL: ${{ secrets.PROD_BASE_URL }}
        run: |
          set -e
          curl -fsSL "$BASE_URL/api/health" | jq .
          curl -fsSI "$BASE_URL/courses" | head -n 1
