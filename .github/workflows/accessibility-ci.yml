name: Accessibility & Performance CI

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main, develop]

jobs:
  lighthouse-ci:
    runs-on: ubuntu-latest
    env:
      NODE_ENV: development
      NEXT_TELEMETRY_DISABLED: '1'
      # Map GitHub Secrets/Vars â†’ process.env
      SUPABASE_URL: ${{ secrets.CI_SUPABASE_URL }}
      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.CI_SUPABASE_SERVICE_ROLE_KEY }}
      SUPABASE_ANON_KEY: ${{ secrets.CI_SUPABASE_ANON_KEY }}
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.CI_SUPABASE_URL }}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.CI_SUPABASE_ANON_KEY }}
      OPENAI_API_KEY: ${{ secrets.CI_OPENAI_API_KEY }}
      STRIPE_SECRET_KEY: ${{ secrets.CI_STRIPE_SECRET_KEY }}
      NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: ${{ secrets.CI_STRIPE_PUBLISHABLE_KEY }}
      RESEND_API_KEY: ${{ secrets.CI_RESEND_API_KEY }}
      TESTKIT_ON: 'true'
      TESTKIT_TOKEN: ${{ secrets.CI_TESTKIT_TOKEN }}
      BASE_URL: 'http://localhost:4330'
      NEXT_PUBLIC_ENV: 'ci'
      NEXT_PUBLIC_SITE_URL: 'http://localhost:4330'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          check-latest: true
          cache: "npm"
          cache-dependency-path: web/package-lock.json

      - name: Show node/npm
        run: |
          node -v
          npm -v

      - name: Update npm
        run: npm i -g npm@latest

      - name: Clean install dependencies
        working-directory: web
        run: |
          rm -rf node_modules package-lock.json
          npm cache clean --force
          npm install --no-audit --prefer-online

      - name: Write .env files from secrets
        run: node ../tools/env/ci-setup.mjs

      - name: Build application
        run: npm run build:ci
        working-directory: web

      - name: Start web server (background)
        run: npm run start:ci &
        working-directory: web
        env:
          PORT: 4330

      - name: Wait for /en to be ready
        run: npx wait-on -t 120000 http-get://localhost:4330/en

      - name: Run Lighthouse CI
        run: |
          npx lhci autorun --config=.lighthouserc.cjs
        working-directory: web
        env:
          PORT: 4330

      - name: Upload LHCI artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lhci-artifacts
          path: web/.lighthouseci/*

      - name: Run axe-core accessibility tests
        run: |
          npm run axe:ci
        working-directory: web

  lint-a11y:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          check-latest: true

      - name: Show node/npm
        run: |
          node -v
          npm -v

      - name: Update npm
        run: npm i -g npm@latest

      - name: Clean install dependencies
        working-directory: web
        run: |
          rm -rf node_modules package-lock.json
          npm cache clean --force
          npm install --no-audit --prefer-online

      - name: Write .env files from secrets
        run: node ../tools/env/ci-setup.mjs

      - name: Build application
        run: npm run build:ci
        working-directory: web

      - name: Start web server (background)
        run: npm run start:ci &
        working-directory: web
        env:
          PORT: 4330

      - name: Wait for /en to be ready
        run: npx wait-on -t 120000 http-get://localhost:4330/en

      - name: Run accessibility linting
        run: |
          npm run lint:a11y
        working-directory: web
